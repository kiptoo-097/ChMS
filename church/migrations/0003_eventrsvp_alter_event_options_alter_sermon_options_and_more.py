# Generated by Django 5.0.4 on 2025-06-06 08:17

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('church', '0002_event_end_time'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='EventRSVP',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('attending', models.BooleanField(default=True)),
                ('guests', models.PositiveIntegerField(default=0, help_text='Number of additional guests', validators=[django.core.validators.MaxValueValidator(10)])),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Event RSVP',
                'verbose_name_plural': 'Event RSVPs',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AlterModelOptions(
            name='event',
            options={'ordering': ['date', 'time'], 'verbose_name': 'Church Event', 'verbose_name_plural': 'Church Events'},
        ),
        migrations.AlterModelOptions(
            name='sermon',
            options={'ordering': ['-date'], 'verbose_name': 'Church Sermon', 'verbose_name_plural': 'Church Sermons'},
        ),
        migrations.RemoveField(
            model_name='sermon',
            name='notes',
        ),
        migrations.AddField(
            model_name='event',
            name='is_trending',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='event',
            name='max_attendees',
            field=models.PositiveIntegerField(blank=True, help_text='Maximum number of attendees (leave blank for no limit)', null=True, validators=[django.core.validators.MinValueValidator(1)]),
        ),
        migrations.AddField(
            model_name='sermon',
            name='created_by',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sermons', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='sermon',
            name='is_featured',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='sermon',
            name='scripture_text',
            field=models.TextField(blank=True),
        ),
        migrations.AddField(
            model_name='sermon',
            name='sermon_type',
            field=models.CharField(choices=[('sunday', 'Sunday Service'), ('bible', 'Bible Study'), ('special', 'Special Service'), ('other', 'Other')], default='sunday', max_length=20),
        ),
        migrations.AddField(
            model_name='sermon',
            name='slides',
            field=models.FileField(blank=True, help_text='PDF or PowerPoint slides', null=True, upload_to='sermons/slides/%Y/%m/'),
        ),
        migrations.AddField(
            model_name='sermon',
            name='summary',
            field=models.TextField(blank=True),
        ),
        migrations.AddField(
            model_name='sermon',
            name='updated_at',
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AlterField(
            model_name='event',
            name='created_by',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_events', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='event',
            name='image',
            field=models.ImageField(blank=True, help_text='Upload an image for this event', null=True, upload_to='events/%Y/%m/%d/'),
        ),
        migrations.AlterField(
            model_name='sermon',
            name='audio_file',
            field=models.FileField(blank=True, help_text='Upload audio file of the sermon', null=True, upload_to='sermons/audio/%Y/%m/'),
        ),
        migrations.AlterField(
            model_name='sermon',
            name='date',
            field=models.DateField(),
        ),
        migrations.AlterField(
            model_name='sermon',
            name='topic',
            field=models.CharField(blank=True, max_length=100),
        ),
        migrations.AlterField(
            model_name='sermon',
            name='video_url',
            field=models.URLField(blank=True, help_text='YouTube or Vimeo link'),
        ),
        migrations.AddIndex(
            model_name='event',
            index=models.Index(fields=['date', 'time'], name='church_even_date_9f1b0a_idx'),
        ),
        migrations.AddIndex(
            model_name='event',
            index=models.Index(fields=['is_trending'], name='church_even_is_tren_0c1291_idx'),
        ),
        migrations.AddIndex(
            model_name='sermon',
            index=models.Index(fields=['-date'], name='church_serm_date_55b1ce_idx'),
        ),
        migrations.AddIndex(
            model_name='sermon',
            index=models.Index(fields=['preacher'], name='church_serm_preache_669889_idx'),
        ),
        migrations.AddIndex(
            model_name='sermon',
            index=models.Index(fields=['is_featured'], name='church_serm_is_feat_c76c3a_idx'),
        ),
        migrations.AddField(
            model_name='eventrsvp',
            name='event',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rsvps', to='church.event'),
        ),
        migrations.AddField(
            model_name='eventrsvp',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='event_rsvps', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterUniqueTogether(
            name='eventrsvp',
            unique_together={('event', 'user')},
        ),
    ]
